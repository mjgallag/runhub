apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: build-deploy
spec:
  params:
    - name: git-url
      type: string
    - name: git-revision
      type: string
    - name: subroute-tag
      type: string
    - name: image-tag
      type: string
    - name: cache-from-image-tag
      type: string
  workspaces:
  {{- range $serviceName, $service := .Values.services }}
    - name: src-{{ $serviceName }}
  {{- end}}
    - name: dockerfile
  {{- if .Values.release }}
    - name: prod-kubeconfig
  {{- end}}
  tasks:
  {{- range $serviceName, $service := .Values.services }}
    - name: build-{{ $serviceName }}
      taskRef:
        name: build
      params:
        - name: git-url
          value: $(params.git-url)
        - name: git-revision
          value: $(params.git-revision)
        - name: src-path
          value: {{ $service.srcPath }}
        - name: image-name
          value: {{ $serviceName }}
        - name: image-tag
          value: $(params.image-tag)
        - name: cache-from-image-tag
          value: $(params.cache-from-image-tag)
      workspaces:
        - name: dockerfile
          workspace: dockerfile
        - name: src
          workspace: src-{{ $serviceName }}
    - name: deploy-{{ $serviceName }}
      runAfter:
      {{- range $serviceName, $service := $.Values.services }}
        - build-{{ $serviceName }}
      {{- end}}
      taskRef:
        name: deploy
      params:
        - name: service
          value: {{ $service.subdomain }}
        - name: subroute-tag
          value: $(params.subroute-tag)
        - name: image-name
          value: {{ $serviceName }}
        - name: image-tag
          value: $(params.image-tag)
        - name: domain
          value: {{ $.Values.domain }}
        - name: initialScale
          value: '0'
        - name: minScale
          value: '0'
    - name: migrate-traffic-{{ $serviceName }}
      runAfter:
      {{- range $serviceName, $service := $.Values.services }}
        - deploy-{{ $serviceName }}
      {{- end}}
      taskRef:
        name: migrate-traffic
      params:
        - name: service
          value: {{ $service.subdomain }}
        - name: subroute-tag
          value: $(params.subroute-tag)
        - name: revision-name
          value: $(tasks.deploy-{{ $serviceName }}.results.revision-name)
  {{- if (and $.Values.release $.Values.global.prodDomain) }}
    - name: prod-deploy-{{ $serviceName }}
      when:
        - input: "$(params.git-revision)"
          operator: in
          values:
            - refs/heads/{{ $.Values.release.prodBranch }}
      runAfter:
      {{- range $serviceName, $service := $.Values.services }}
        - build-{{ $serviceName }}
      {{- end}}
      taskRef:
        name: deploy
      params:
        - name: service
          value: {{ $service.subdomain }}
        - name: subroute-tag
          value: ''
        - name: image-name
          value: {{ $serviceName }}
        - name: image-tag
          value: $(params.image-tag)
        - name: domain
          value: {{ $.Values.global.prodDomain }}
        - name: initialScale
          value: '1'
        - name: minScale
          value: '1'
      workspaces:
        - name: prod-kubeconfig
          workspace: prod-kubeconfig
    - name: prod-migrate-traffic-{{ $serviceName }}
      runAfter:
      {{- range $serviceName, $service := $.Values.services }}
        - prod-deploy-{{ $serviceName }}
      {{- end}}
      taskRef:
        name: migrate-traffic
      params:
        - name: service
          value: {{ $service.subdomain }}
        - name: subroute-tag
          value: $(params.subroute-tag)
        - name: revision-name
          value: $(tasks.prod-deploy-{{ $serviceName }}.results.revision-name)
      workspaces:
        - name: prod-kubeconfig
          workspace: prod-kubeconfig
  {{- end }}
  {{- end }}
