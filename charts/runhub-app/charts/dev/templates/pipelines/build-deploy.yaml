apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: build-deploy
spec:
  params:
    - name: git-url
      type: string
    - name: git-revision
      type: string
    - name: tag
      type: string
    - name: cache-from-tag
      type: string
    - name: environment
      type: string
  workspaces:
  {{- range $serviceName, $service := .Values.global.services }}
    - name: src-{{ $serviceName }}
  {{- end }}
    - name: dockerfile
  {{- if .Values.release }}
    - name: prod-kubeconfig
  {{- end }}
  tasks:
    - name: convert-tag-to-subdomain
      taskRef:
        name: convert-to-subdomain
      params:
        - name: input
          value: $(params.tag)
    - name: convert-cache-from-tag-to-subdomain
      taskRef:
        name: convert-to-subdomain
      params:
        - name: input
          value: $(params.cache-from-tag)
  {{- range $serviceName, $service := .Values.global.services }}
    - name: build-{{ $serviceName }}
      runAfter:
        - convert-tag-to-subdomain
        - convert-cache-from-tag-to-subdomain
      taskRef:
        name: build
      params:
        - name: git-url
          value: $(params.git-url)
        - name: git-revision
          value: $(params.git-revision)
        - name: src-path
          value: {{ $service.srcPath }}
        - name: service
          value: {{ $serviceName }}
        - name: tag
          value: $(tasks.convert-tag-to-subdomain.results.output)
        - name: cache-from-tag
          value: $(tasks.convert-cache-from-tag-to-subdomain.results.output)
      workspaces:
        - name: dockerfile
          workspace: dockerfile
        - name: src
          workspace: src-{{ $serviceName }}
    - name: deploy-{{ $serviceName }}
      runAfter:
      {{- range $serviceName, $service := $.Values.global.services }}
        - build-{{ $serviceName }}
      {{- end }}
      taskRef:
        name: deploy
      params:
        - name: service
          value: {{ $serviceName }}
        - name: tag
          value: $(tasks.convert-tag-to-subdomain.results.output)
        - name: sha
          value: $(tasks.build-{{ $serviceName }}.results.sha)
        - name: environment
          value: $(params.environment)
    {{- if $.Values.release }}
      workspaces:
        - name: prod-kubeconfig
          workspace: prod-kubeconfig
    {{- end }}
    - name: expose-{{ $serviceName }}
      runAfter:
      {{- range $serviceName, $service := $.Values.global.services }}
        - deploy-{{ $serviceName }}
      {{- end }}
      taskRef:
        name: expose
      params:
        - name: service
          value: {{ $serviceName }}
        - name: subdomain
          value: {{ $service.subdomain }}
        - name: tag
          value: $(tasks.convert-tag-to-subdomain.results.output)
        - name: environment
          value: $(params.environment)
    {{- if $.Values.release }}
      workspaces:
        - name: prod-kubeconfig
          workspace: prod-kubeconfig
    {{- end }}
  {{- end }}
