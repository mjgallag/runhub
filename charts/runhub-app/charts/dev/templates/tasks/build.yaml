apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: build
spec:
  params:
    - name: git-url
      type: string
    - name: git-revision
      type: string
    - name: src-path
      type: string
    - name: service
      type: string
    - name: tag
      type: string
    - name: cache-from-tag
      type: string
  workspaces:
    - name: dockerfile
      readOnly: true
    - name: src
  results:
    - name: sha
  steps:
    - name: get-src
      image: gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/git-init:v0.20.1@sha256:a0f7a0948152a401f587dde580b41b5e80b52f3432aba7902166aa79941e8835
      script: |
        /ko-app/git-init -url '$(params.git-url)' -revision '$(params.git-revision)' -path '$(workspaces.src.path)'
    - name: build
      image: moby/buildkit:v0.8.1@sha256:ecd5ad4910c322cad6995f8a1a0805d9da4b09ed4aaef40627f5bcb8ebf74068
      securityContext:
        privileged: true
      script: |
        IMAGE='{{ template "runhub-app.dev.imagePathWithRegistry" . }}/$(params.service)'
        CACHE_IMAGE='{{ template "runhub-app.dev.imagePathWithRegistry" . }}/cache/$(params.service)'

        buildctl-daemonless.sh \
          build \
            --frontend dockerfile.v0 \
            --local dockerfile='$(workspaces.dockerfile.path)' \
            --local context='$(workspaces.src.path)' \
            --opt build-arg:SRC_PATH='$(params.src-path)' \
            --output type=image,name="${IMAGE:?}"':$(params.tag)',push=true \
            --export-cache type=registry,mode=max,ref="${CACHE_IMAGE:?}"':$(params.tag)' \
            --import-cache type=registry,\"ref="${CACHE_IMAGE:?}"':$(params.tag),'"${CACHE_IMAGE:?}"':$(params.cache-from-tag)'\"
    - name: get-sha
      image: quay.io/skopeo/upstream:latest@sha256:90915fde2466d5163d7ca518cbd2bbcfb45b245ae18131af3f5f01fd8ad23d0e
      script: |
        IMAGE='{{ template "runhub-app.dev.imagePathWithRegistry" . }}/$(params.service)'

        skopeo inspect "docker://${IMAGE:?}"':$(params.tag)' --format '{{"{{"}} .Digest }}' \
          | tr -d '\n' > '$(results.sha.path)'
