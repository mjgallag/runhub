apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: expose
spec:
  params:
    - name: service
      type: string
    - name: tag
      type: string
    - name: environment
      type: string
{{- if .Values.release }}
  workspaces:
    - name: prod-kubeconfig
      readOnly: true
{{- end }}
  steps:
    - name: expose
      image: gcr.io/bitnami-containers/kubectl:{{ template "runhub-app.dev.kubectlImageTag" . }}
      script: |
        if [ '$(params.environment)' = 'dev' ]; then
          DOMAIN='{{ $.Values.domain }}'
          SERVICE='$(params.service)-$(params.tag)'
        elif [ '$(params.environment)' = 'prod' ]; then
          export KUBECONFIG=$(workspaces.prod-kubeconfig.path)/kubeconfig
          DOMAIN='{{ $.Values.global.prodDomain }}'
          SERVICE='$(params.service)'
        fi

        kubectl apply --filename - <<EOF
        apiVersion: networking.istio.io/v1beta1
        kind: VirtualService
        metadata:
          name: ${SERVICE:?}
        spec:
          gateways:
            - gateway
          hosts:
            - ${SERVICE:?}.${DOMAIN:?}
          http:
            - rewrite:
                authority: ${SERVICE:?}.$(params.environment)-{{ .Release.Name }}.svc.cluster.local
              route:
                - destination:
                    host: ${SERVICE:?}.$(params.environment)-{{ .Release.Name }}.svc.cluster.local
        EOF
    - name: migrate-traffic
      image: gcr.io/knative-releases/knative.dev/client/cmd/kn:{{ template "runhub-app.dev.knImageTag" . }}
      script: |
        if [ '$(params.environment)' = 'dev' ]; then
          SERVICE='$(params.service)-$(params.tag)'
        elif [ '$(params.environment)' = 'prod' ]; then
          export KUBECONFIG=$(workspaces.prod-kubeconfig.path)/kubeconfig
          SERVICE='$(params.service)'
        fi

        REVISION=$(kn service describe "${SERVICE:?}" \
          --output go-template --template '{{"{{"}} .status.latestReadyRevisionName }}')

        kn service update "${SERVICE:?}" --traffic "${REVISION:?}"=100
