apiVersion: v1
kind: ConfigMap
metadata:
  name: dockerfile
data:
  dockerfile: |
    FROM alpine:3.13.5@sha256:69e70a79f2d41ab5d637de98c1e0b055206ba40a8145e7bddb55ccc04e13cf8f AS alpine

    FROM node:14.16.1-alpine3.13@sha256:7021600941a9caa072c592b6a89cec80e46cb341d934f1868220f5786f236f60 AS node
    RUN npm install --global npm@7.11.2  && npm cache clean --force

    FROM alpine AS src
    ARG APP
    WORKDIR "/${APP}-src"
    COPY . .

    FROM src AS src-dependencies
    ARG APP
    RUN find . \( -name package.json -o -name package-lock.json \) -exec sh -c \
      'mkdir -p "$(dirname "${2:?}/${1:?}")" && cp "${1:?}" "${2:?}/${1:?}"' \
      _ {} "../${APP}-src-dependencies" \;

    FROM node
    ARG APP
    WORKDIR "/${APP}"
    COPY --from=src-dependencies "/${APP}-src-dependencies" .
    RUN npm ci && npm cache clean --force
    COPY --from=src "/${APP}-src" .
    ARG SERVICE_SRC_PATH
    WORKDIR "/${APP}/${SERVICE_SRC_PATH}"
    RUN npm run --if-present build
    ENV NODE_ENV=production
    ENTRYPOINT ["npm", "run", "serve"]
    EXPOSE 8080
