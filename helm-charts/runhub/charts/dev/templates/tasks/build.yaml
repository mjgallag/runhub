apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: build
spec:
  params:
    - name: git-url
      type: string
    - name: git-revision
      type: string
    - name: service
      type: string
    - name: service-src-path
      type: string
    - name: tag
      type: string
    - name: cache-from-tag
      type: string
  workspaces:
    - name: tools
      readOnly: true
    - name: context
  steps:
    - name: get-src
      image: gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/git-init:v0.24.1@sha256:52358dec303aa1349c2b4f23e6e483b479ba71214ef8e94c369cfe8e25af31fb
      script: |
        /ko-app/git-init -url '$(params.git-url)' -revision '$(params.git-revision)' -path '$(workspaces.context.path)/src'
    - name: build
      image: moby/buildkit:v0.8.3@sha256:171689e43026533b48701ab6566b72659dd1839488d715c73ef3fe387fab9a80
      securityContext:
        privileged: true
      resources:
        requests:
          cpu: 3.5
          memory: 12Gi
      script: |
        IMAGE='{{ template "runhub.dev.imagePathWithRegistry" . }}/$(params.service)'
        CACHE_IMAGE='{{ template "runhub.dev.imagePathWithRegistry" . }}/$(params.service)/cache'

        cp -RL '$(workspaces.tools.path)' '$(workspaces.context.path)/tools'

        buildctl-daemonless.sh \
          build \
            --frontend dockerfile.v0 \
            --local dockerfile='$(workspaces.context.path)/tools' \
            --local context='$(workspaces.context.path)' \
            --opt build-arg:APP='{{ .Release.Name }}' \
            --opt build-arg:SERVICE_SRC_PATH='$(params.service-src-path)' \
            --output type=image,name="${IMAGE:?}"':$(params.tag)',push=true \
            --export-cache type=registry,mode=max,ref="${CACHE_IMAGE:?}"':$(params.tag)' \
            --import-cache type=registry,\"ref="${CACHE_IMAGE:?}"':$(params.tag),'"${CACHE_IMAGE:?}"':$(params.cache-from-tag)'\"
