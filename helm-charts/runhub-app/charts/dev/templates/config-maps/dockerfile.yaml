apiVersion: v1
kind: ConfigMap
metadata:
  name: dockerfile
data:
  dockerfile: |
    FROM node:14.16.0-alpine3.13@sha256:7eb57d8fd2d3ee789dbb551bdf5b0325369c3ad7a72a690e80d034041da7e42d AS node

    {{ range $dependencyName, $dependency := .Values.dependencies -}}
    FROM node AS {{ $dependencyName }}-base
    WORKDIR /{{ $dependency.srcPath }}
    COPY {{ $dependency.srcPath }}/package.json {{ $dependency.srcPath }}/package-lock.json .

    FROM {{ $dependencyName }}-base AS {{ $dependencyName }}-build
    RUN npm ci && npm cache clean --force
    COPY {{ $dependency.srcPath }} .
    RUN npm run --if-present build
    RUN rm -R node_modules

    FROM {{ $dependencyName }}-base AS {{ $dependencyName }}-production
    ENV NODE_ENV=production
    RUN npm ci && npm cache clean --force
    COPY --from={{ $dependencyName }}-build /{{ $dependency.srcPath }} .
    {{- end }}

    FROM node AS base
    {{- range $dependencyName, $dependency := .Values.dependencies }}
    WORKDIR /{{ $dependency.srcPath }}
    COPY {{ $dependency.srcPath }}/package.json .
    {{- end }}
    ARG SRC_PATH
    WORKDIR /$SRC_PATH
    COPY $SRC_PATH/package.json $SRC_PATH/package-lock.json .

    FROM base AS build
    RUN npm ci && npm cache clean --force
    {{- range $dependencyName, $dependency := .Values.dependencies }}
    COPY --from={{ $dependencyName }}-production /{{ $dependency.srcPath }} /{{ $dependency.srcPath }}
    {{- end }}
    COPY $SRC_PATH .
    RUN npm run --if-present build
    RUN rm -R node_modules

    FROM base AS production
    ENV NODE_ENV=production
    RUN npm ci && npm cache clean --force
    {{- range $dependencyName, $dependency := .Values.dependencies }}
    COPY --from={{ $dependencyName }}-production /{{ $dependency.srcPath }} /{{ $dependency.srcPath }}
    {{- end }}
    ARG SRC_PATH
    COPY --from=build /$SRC_PATH .
    ENTRYPOINT ["npm", "run", "serve"]
    EXPOSE 8080
