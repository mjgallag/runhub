apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: build
spec:
  params:
    - name: git-url
      type: string
    - name: git-revision
      type: string
    - name: src-path
      type: string
    - name: service
      type: string
    - name: tag
      type: string
    - name: cache-from-tag
      type: string
  workspaces:
    - name: dockerfile
      readOnly: true
    - name: src
  steps:
    - name: get-src
      image: gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/git-init:v0.23.0@sha256:2ea2ea78928b365d6d13c5308f9fff63f685063684c843611be74abc43ea4f1c
      script: |
        /ko-app/git-init -url '$(params.git-url)' -revision '$(params.git-revision)' -path '$(workspaces.src.path)'
    - name: build
      image: moby/buildkit:v0.8.2@sha256:4a9629b0e1c3e9e8ed1856f42bc77dfd5bb6b09be23909fe92f78baad334cda2
      securityContext:
        privileged: true
      resources:
        requests:
          cpu: 4
          memory: 16Gi
        limits:
          cpu: 4
          memory: 16Gi
      script: |
        IMAGE='{{ template "runhub-app.dev.imagePathWithRegistry" . }}/$(params.service)'
        CACHE_IMAGE='{{ template "runhub-app.dev.imagePathWithRegistry" . }}/cache/$(params.service)'

        buildctl-daemonless.sh \
          build \
            --frontend dockerfile.v0 \
            --local dockerfile='$(workspaces.dockerfile.path)' \
            --local context='$(workspaces.src.path)' \
            --opt build-arg:SRC_PATH='$(params.src-path)' \
            --output type=image,name="${IMAGE:?}"':$(params.tag)',push=true \
            --export-cache type=registry,mode=max,ref="${CACHE_IMAGE:?}"':$(params.tag)' \
            --import-cache type=registry,\"ref="${CACHE_IMAGE:?}"':$(params.tag),'"${CACHE_IMAGE:?}"':$(params.cache-from-tag)'\"
